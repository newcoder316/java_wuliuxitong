package com.dev.warehouse.bus.controller;


import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.dev.warehouse.bus.entity.Student;
import com.dev.warehouse.bus.service.IStudentService;
import com.dev.warehouse.bus.vo.CustomerVo;
import com.dev.warehouse.bus.vo.StudentVo;
import com.dev.warehouse.sys.common.DataGridView;
import com.dev.warehouse.sys.common.ResultObj;

import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;


@RestController
@RequestMapping("/student")
public class StudentController {

    @Autowired
    private IStudentService studentService;

    /**
     * 查询所有的学生	
     * @param studentVo
     * @return
     */
    @RequestMapping("loadAllStudent")
    public DataGridView loadAllStudent(StudentVo studentVo){
        //1.声明一个分页page对象
        IPage<Student> page = new Page(studentVo.getPage(),studentVo.getLimit());
        //2.声明一个queryWrapper
        QueryWrapper<Student> queryWrapper = new QueryWrapper();
        queryWrapper.like(StringUtils.isNotBlank(studentVo.getUsername()),"username",studentVo.getUsername());
        
        studentService.page(page,queryWrapper);
        return new DataGridView(page.getTotal(),page.getRecords());
    }
    /**
     * 添加一个学生
     * @param studentVo
     * @return
     */
    @RequestMapping("addStudent")
    public ResultObj addCustomer(StudentVo studentVo){
        try {
        	studentService.save(studentVo);
            return ResultObj.ADD_SUCCESS;
        } catch (Exception e) {
            e.printStackTrace();
            return ResultObj.ADD_ERROR;
        }
    }
    
    /**
     * 修改一个客户
     * @param customerVo
     * @return
     */
    @RequestMapping("updateStudent")
    public ResultObj updateCustomer(StudentVo studentVo){
        try {
        	studentService.updateById(studentVo);
            return ResultObj.UPDATE_SUCCESS;
        } catch (Exception e) {
            e.printStackTrace();
            return ResultObj.UPDATE_ERROR;
        }
    }

   

}

